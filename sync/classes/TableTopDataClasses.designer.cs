#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sync.classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="nature-net-aces")]
	public partial class TableTopDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAction_Type(Action_Type instance);
    partial void UpdateAction_Type(Action_Type instance);
    partial void DeleteAction_Type(Action_Type instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertCollection(Collection instance);
    partial void UpdateCollection(Collection instance);
    partial void DeleteCollection(Collection instance);
    partial void InsertCollection_Contribution_Mapping(Collection_Contribution_Mapping instance);
    partial void UpdateCollection_Contribution_Mapping(Collection_Contribution_Mapping instance);
    partial void DeleteCollection_Contribution_Mapping(Collection_Contribution_Mapping instance);
    partial void InsertContribution(Contribution instance);
    partial void UpdateContribution(Contribution instance);
    partial void DeleteContribution(Contribution instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertFeedback_Type(Feedback_Type instance);
    partial void UpdateFeedback_Type(Feedback_Type instance);
    partial void DeleteFeedback_Type(Feedback_Type instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAction(Action instance);
    partial void UpdateAction(Action instance);
    partial void DeleteAction(Action instance);
    partial void InsertInteraction_Log(Interaction_Log instance);
    partial void UpdateInteraction_Log(Interaction_Log instance);
    partial void DeleteInteraction_Log(Interaction_Log instance);
    partial void InsertInteraction_Type(Interaction_Type instance);
    partial void UpdateInteraction_Type(Interaction_Type instance);
    partial void DeleteInteraction_Type(Interaction_Type instance);
    #endregion
		
		public TableTopDataClassesDataContext() : 
				base(global::sync.Properties.Settings.Default.nature_netConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TableTopDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TableTopDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TableTopDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TableTopDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Action_Type> Action_Types
		{
			get
			{
				return this.GetTable<Action_Type>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<Collection> Collections
		{
			get
			{
				return this.GetTable<Collection>();
			}
		}
		
		public System.Data.Linq.Table<Collection_Contribution_Mapping> Collection_Contribution_Mappings
		{
			get
			{
				return this.GetTable<Collection_Contribution_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Contribution> Contributions
		{
			get
			{
				return this.GetTable<Contribution>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Feedback_Type> Feedback_Types
		{
			get
			{
				return this.GetTable<Feedback_Type>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Design_Idea> Design_Ideas
		{
			get
			{
				return this.GetTable<Design_Idea>();
			}
		}
		
		public System.Data.Linq.Table<Action> Actions
		{
			get
			{
				return this.GetTable<Action>();
			}
		}
		
		public System.Data.Linq.Table<Interaction_Log> Interaction_Logs
		{
			get
			{
				return this.GetTable<Interaction_Log>();
			}
		}
		
		public System.Data.Linq.Table<Interaction_Type> Interaction_Types
		{
			get
			{
				return this.GetTable<Interaction_Type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Action_Type")]
	public partial class Action_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<Action> _Actions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Action_Type()
		{
			this._Actions = new EntitySet<Action>(new Action<Action>(this.attach_Actions), new Action<Action>(this.detach_Actions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_Type_Action", Storage="_Actions", ThisKey="id", OtherKey="type_id")]
		public EntitySet<Action> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.Action_Type = this;
		}
		
		private void detach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.Action_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _avatar;
		
		private string _description;
		
		private System.DateTime _creation_date;
		
		private System.Nullable<System.DateTime> _expire_date;
		
		private int _location_id;
		
		private string _technical_info;
		
		private EntitySet<Collection> _Collections;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oncreation_dateChanging(System.DateTime value);
    partial void Oncreation_dateChanged();
    partial void Onexpire_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onexpire_dateChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public Activity()
		{
			this._Collections = new EntitySet<Collection>(new Action<Collection>(this.attach_Collections), new Action<Collection>(this.detach_Collections));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NVarChar(64)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_date", DbType="DateTime NOT NULL")]
		public System.DateTime creation_date
		{
			get
			{
				return this._creation_date;
			}
			set
			{
				if ((this._creation_date != value))
				{
					this.Oncreation_dateChanging(value);
					this.SendPropertyChanging();
					this._creation_date = value;
					this.SendPropertyChanged("creation_date");
					this.Oncreation_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expire_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> expire_date
		{
			get
			{
				return this._expire_date;
			}
			set
			{
				if ((this._expire_date != value))
				{
					this.Onexpire_dateChanging(value);
					this.SendPropertyChanging();
					this._expire_date = value;
					this.SendPropertyChanged("expire_date");
					this.Onexpire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Collection", Storage="_Collections", ThisKey="id", OtherKey="activity_id")]
		public EntitySet<Collection> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Activity", Storage="_Location", ThisKey="location_id", OtherKey="id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._location_id = value.id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collection")]
	public partial class Collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private int _activity_id;
		
		private int _user_id;
		
		private System.DateTime _date;
		
		private string _technical_info;
		
		private EntitySet<Collection_Contribution_Mapping> _Collection_Contribution_Mappings;
		
		private EntityRef<Activity> _Activity;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public Collection()
		{
			this._Collection_Contribution_Mappings = new EntitySet<Collection_Contribution_Mapping>(new Action<Collection_Contribution_Mapping>(this.attach_Collection_Contribution_Mappings), new Action<Collection_Contribution_Mapping>(this.detach_Collection_Contribution_Mappings));
			this._Activity = default(EntityRef<Activity>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_id", DbType="Int NOT NULL")]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_Collection_Contribution_Mapping", Storage="_Collection_Contribution_Mappings", ThisKey="id", OtherKey="collection_id")]
		public EntitySet<Collection_Contribution_Mapping> Collection_Contribution_Mappings
		{
			get
			{
				return this._Collection_Contribution_Mappings;
			}
			set
			{
				this._Collection_Contribution_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Collection", Storage="_Activity", ThisKey="activity_id", OtherKey="id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._activity_id = value.id;
					}
					else
					{
						this._activity_id = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Collection", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collection_Contribution_Mappings(Collection_Contribution_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Collection = this;
		}
		
		private void detach_Collection_Contribution_Mappings(Collection_Contribution_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Collection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collection_Contribution_Mapping")]
	public partial class Collection_Contribution_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _date;
		
		private int _contribution_id;
		
		private int _collection_id;
		
		private string _technical_info;
		
		private EntityRef<Collection> _Collection;
		
		private EntityRef<Contribution> _Contribution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Oncontribution_idChanging(int value);
    partial void Oncontribution_idChanged();
    partial void Oncollection_idChanging(int value);
    partial void Oncollection_idChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public Collection_Contribution_Mapping()
		{
			this._Collection = default(EntityRef<Collection>);
			this._Contribution = default(EntityRef<Contribution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contribution_id", DbType="Int NOT NULL")]
		public int contribution_id
		{
			get
			{
				return this._contribution_id;
			}
			set
			{
				if ((this._contribution_id != value))
				{
					if (this._Contribution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontribution_idChanging(value);
					this.SendPropertyChanging();
					this._contribution_id = value;
					this.SendPropertyChanged("contribution_id");
					this.Oncontribution_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collection_id", DbType="Int NOT NULL")]
		public int collection_id
		{
			get
			{
				return this._collection_id;
			}
			set
			{
				if ((this._collection_id != value))
				{
					if (this._Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncollection_idChanging(value);
					this.SendPropertyChanging();
					this._collection_id = value;
					this.SendPropertyChanged("collection_id");
					this.Oncollection_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_Collection_Contribution_Mapping", Storage="_Collection", ThisKey="collection_id", OtherKey="id", IsForeignKey=true)]
		public Collection Collection
		{
			get
			{
				return this._Collection.Entity;
			}
			set
			{
				Collection previousValue = this._Collection.Entity;
				if (((previousValue != value) 
							|| (this._Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collection.Entity = null;
						previousValue.Collection_Contribution_Mappings.Remove(this);
					}
					this._Collection.Entity = value;
					if ((value != null))
					{
						value.Collection_Contribution_Mappings.Add(this);
						this._collection_id = value.id;
					}
					else
					{
						this._collection_id = default(int);
					}
					this.SendPropertyChanged("Collection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contribution_Collection_Contribution_Mapping", Storage="_Contribution", ThisKey="contribution_id", OtherKey="id", IsForeignKey=true)]
		public Contribution Contribution
		{
			get
			{
				return this._Contribution.Entity;
			}
			set
			{
				Contribution previousValue = this._Contribution.Entity;
				if (((previousValue != value) 
							|| (this._Contribution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contribution.Entity = null;
						previousValue.Collection_Contribution_Mappings.Remove(this);
					}
					this._Contribution.Entity = value;
					if ((value != null))
					{
						value.Collection_Contribution_Mappings.Add(this);
						this._contribution_id = value.id;
					}
					else
					{
						this._contribution_id = default(int);
					}
					this.SendPropertyChanged("Contribution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contribution")]
	public partial class Contribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _note;
		
		private string _media_url;
		
		private string _tags;
		
		private System.DateTime _date;
		
		private int _location_id;
		
		private string _technical_info;
		
		private EntitySet<Collection_Contribution_Mapping> _Collection_Contribution_Mappings;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void Onmedia_urlChanging(string value);
    partial void Onmedia_urlChanged();
    partial void OntagsChanging(string value);
    partial void OntagsChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public Contribution()
		{
			this._Collection_Contribution_Mappings = new EntitySet<Collection_Contribution_Mapping>(new Action<Collection_Contribution_Mapping>(this.attach_Collection_Contribution_Mappings), new Action<Collection_Contribution_Mapping>(this.detach_Collection_Contribution_Mappings));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_url", DbType="NVarChar(MAX)")]
		public string media_url
		{
			get
			{
				return this._media_url;
			}
			set
			{
				if ((this._media_url != value))
				{
					this.Onmedia_urlChanging(value);
					this.SendPropertyChanging();
					this._media_url = value;
					this.SendPropertyChanged("media_url");
					this.Onmedia_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tags", DbType="NVarChar(MAX)")]
		public string tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				if ((this._tags != value))
				{
					this.OntagsChanging(value);
					this.SendPropertyChanging();
					this._tags = value;
					this.SendPropertyChanged("tags");
					this.OntagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contribution_Collection_Contribution_Mapping", Storage="_Collection_Contribution_Mappings", ThisKey="id", OtherKey="contribution_id")]
		public EntitySet<Collection_Contribution_Mapping> Collection_Contribution_Mappings
		{
			get
			{
				return this._Collection_Contribution_Mappings;
			}
			set
			{
				this._Collection_Contribution_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contribution", Storage="_Location", ThisKey="location_id", OtherKey="id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Contributions.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Contributions.Add(this);
						this._location_id = value.id;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collection_Contribution_Mappings(Collection_Contribution_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Contribution = this;
		}
		
		private void detach_Collection_Contribution_Mappings(Collection_Contribution_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.Contribution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _note;
		
		private System.DateTime _date;
		
		private int _type_id;
		
		private int _user_id;
		
		private int _parent_id;
		
		private string _object_type;
		
		private System.Data.Linq.Binary _object;
		
		private System.Nullable<int> _object_id;
		
		private string _technical_info;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntityRef<Feedback> _Feedback1;
		
		private EntityRef<Feedback_Type> _Feedback_Type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ontype_idChanging(int value);
    partial void Ontype_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onparent_idChanging(int value);
    partial void Onparent_idChanged();
    partial void Onobject_typeChanging(string value);
    partial void Onobject_typeChanged();
    partial void OnobjectChanging(System.Data.Linq.Binary value);
    partial void OnobjectChanged();
    partial void Onobject_idChanging(System.Nullable<int> value);
    partial void Onobject_idChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public Feedback()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Feedback1 = default(EntityRef<Feedback>);
			this._Feedback_Type = default(EntityRef<Feedback_Type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="Int NOT NULL")]
		public int type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._Feedback_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int NOT NULL")]
		public int parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._Feedback1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_type", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string object_type
		{
			get
			{
				return this._object_type;
			}
			set
			{
				if ((this._object_type != value))
				{
					this.Onobject_typeChanging(value);
					this.SendPropertyChanging();
					this._object_type = value;
					this.SendPropertyChanged("object_type");
					this.Onobject_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="object", Storage="_object", DbType="Binary(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary @object
		{
			get
			{
				return this._object;
			}
			set
			{
				if ((this._object != value))
				{
					this.OnobjectChanging(value);
					this.SendPropertyChanging();
					this._object = value;
					this.SendPropertyChanged("@object");
					this.OnobjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_id", DbType="Int")]
		public System.Nullable<int> object_id
		{
			get
			{
				return this._object_id;
			}
			set
			{
				if ((this._object_id != value))
				{
					this.Onobject_idChanging(value);
					this.SendPropertyChanging();
					this._object_id = value;
					this.SendPropertyChanged("object_id");
					this.Onobject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feedback_Feedback", Storage="_Feedbacks", ThisKey="id", OtherKey="parent_id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feedback_Feedback", Storage="_Feedback1", ThisKey="parent_id", OtherKey="id", IsForeignKey=true)]
		public Feedback Feedback1
		{
			get
			{
				return this._Feedback1.Entity;
			}
			set
			{
				Feedback previousValue = this._Feedback1.Entity;
				if (((previousValue != value) 
							|| (this._Feedback1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feedback1.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Feedback1.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._parent_id = value.id;
					}
					else
					{
						this._parent_id = default(int);
					}
					this.SendPropertyChanged("Feedback1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feedback_Type_Feedback", Storage="_Feedback_Type", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public Feedback_Type Feedback_Type
		{
			get
			{
				return this._Feedback_Type.Entity;
			}
			set
			{
				Feedback_Type previousValue = this._Feedback_Type.Entity;
				if (((previousValue != value) 
							|| (this._Feedback_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feedback_Type.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Feedback_Type.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(int);
					}
					this.SendPropertyChanged("Feedback_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Feedback", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Feedback1 = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Feedback1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback_Type")]
	public partial class Feedback_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _data_type;
		
		private EntitySet<Feedback> _Feedbacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ondata_typeChanging(string value);
    partial void Ondata_typeChanged();
    #endregion
		
		public Feedback_Type()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_type", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string data_type
		{
			get
			{
				return this._data_type;
			}
			set
			{
				if ((this._data_type != value))
				{
					this.Ondata_typeChanging(value);
					this.SendPropertyChanging();
					this._data_type = value;
					this.SendPropertyChanged("data_type");
					this.Ondata_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feedback_Type_Feedback", Storage="_Feedbacks", ThisKey="id", OtherKey="type_id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Feedback_Type = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Feedback_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<Contribution> _Contributions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Location()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Contributions = new EntitySet<Contribution>(new Action<Contribution>(this.attach_Contributions), new Action<Contribution>(this.detach_Contributions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Activity", Storage="_Activities", ThisKey="id", OtherKey="location_id")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contribution", Storage="_Contributions", ThisKey="id", OtherKey="location_id")]
		public EntitySet<Contribution> Contributions
		{
			get
			{
				return this._Contributions;
			}
			set
			{
				this._Contributions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Contributions(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Contributions(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _password;
		
		private string _avatar;
		
		private string _technical_info;
		
		private EntitySet<Collection> _Collections;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Action> _Actions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public User()
		{
			this._Collections = new EntitySet<Collection>(new Action<Collection>(this.attach_Collections), new Action<Collection>(this.detach_Collections));
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Actions = new EntitySet<Action>(new Action<Action>(this.attach_Actions), new Action<Action>(this.detach_Actions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(64)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(128)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NVarChar(64)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Collection", Storage="_Collections", ThisKey="id", OtherKey="user_id")]
		public EntitySet<Collection> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Feedback", Storage="_Feedbacks", ThisKey="id", OtherKey="user_id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Action", Storage="_Actions", ThisKey="id", OtherKey="user_id")]
		public EntitySet<Action> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Design_Ideas")]
	public partial class Design_Idea
	{
		
		private int _id;
		
		private string _note;
		
		private string _media_url;
		
		private string _tags;
		
		private System.DateTime _date;
		
		private int _location_id;
		
		private string _technical_info;
		
		private string _name;
		
		private string _avatar;
		
		public Design_Idea()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this._note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_url", DbType="NVarChar(MAX)")]
		public string media_url
		{
			get
			{
				return this._media_url;
			}
			set
			{
				if ((this._media_url != value))
				{
					this._media_url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tags", DbType="NVarChar(MAX)")]
		public string tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				if ((this._tags != value))
				{
					this._tags = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					this._location_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this._technical_info = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NVarChar(64)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this._avatar = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Action")]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.DateTime _date;
		
		private int _type_id;
		
		private int _user_id;
		
		private string _object_type;
		
		private int _object_id;
		
		private string _technical_info;
		
		private EntityRef<Action_Type> _Action_Type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ontype_idChanging(int value);
    partial void Ontype_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onobject_typeChanging(string value);
    partial void Onobject_typeChanged();
    partial void Onobject_idChanging(int value);
    partial void Onobject_idChanged();
    partial void Ontechnical_infoChanging(string value);
    partial void Ontechnical_infoChanged();
    #endregion
		
		public Action()
		{
			this._Action_Type = default(EntityRef<Action_Type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="Int NOT NULL")]
		public int type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._Action_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_type", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string object_type
		{
			get
			{
				return this._object_type;
			}
			set
			{
				if ((this._object_type != value))
				{
					this.Onobject_typeChanging(value);
					this.SendPropertyChanging();
					this._object_type = value;
					this.SendPropertyChanged("object_type");
					this.Onobject_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_id", DbType="Int NOT NULL")]
		public int object_id
		{
			get
			{
				return this._object_id;
			}
			set
			{
				if ((this._object_id != value))
				{
					this.Onobject_idChanging(value);
					this.SendPropertyChanging();
					this._object_id = value;
					this.SendPropertyChanged("object_id");
					this.Onobject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_technical_info", DbType="NVarChar(MAX)")]
		public string technical_info
		{
			get
			{
				return this._technical_info;
			}
			set
			{
				if ((this._technical_info != value))
				{
					this.Ontechnical_infoChanging(value);
					this.SendPropertyChanging();
					this._technical_info = value;
					this.SendPropertyChanged("technical_info");
					this.Ontechnical_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_Type_Action", Storage="_Action_Type", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public Action_Type Action_Type
		{
			get
			{
				return this._Action_Type.Entity;
			}
			set
			{
				Action_Type previousValue = this._Action_Type.Entity;
				if (((previousValue != value) 
							|| (this._Action_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Action_Type.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._Action_Type.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(int);
					}
					this.SendPropertyChanged("Action_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Action", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interaction_Log")]
	public partial class Interaction_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _type;
		
		private System.DateTime _date;
		
		private int _touch_id;
		
		private double _touch_x;
		
		private double _touch_y;
		
		private string _details;
		
		private EntityRef<Interaction_Type> _Interaction_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ontouch_idChanging(int value);
    partial void Ontouch_idChanged();
    partial void Ontouch_xChanging(double value);
    partial void Ontouch_xChanged();
    partial void Ontouch_yChanging(double value);
    partial void Ontouch_yChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    #endregion
		
		public Interaction_Log()
		{
			this._Interaction_Type = default(EntityRef<Interaction_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					if (this._Interaction_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_touch_id", DbType="Int NOT NULL")]
		public int touch_id
		{
			get
			{
				return this._touch_id;
			}
			set
			{
				if ((this._touch_id != value))
				{
					this.Ontouch_idChanging(value);
					this.SendPropertyChanging();
					this._touch_id = value;
					this.SendPropertyChanged("touch_id");
					this.Ontouch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_touch_x", DbType="Float NOT NULL")]
		public double touch_x
		{
			get
			{
				return this._touch_x;
			}
			set
			{
				if ((this._touch_x != value))
				{
					this.Ontouch_xChanging(value);
					this.SendPropertyChanging();
					this._touch_x = value;
					this.SendPropertyChanged("touch_x");
					this.Ontouch_xChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_touch_y", DbType="Float NOT NULL")]
		public double touch_y
		{
			get
			{
				return this._touch_y;
			}
			set
			{
				if ((this._touch_y != value))
				{
					this.Ontouch_yChanging(value);
					this.SendPropertyChanging();
					this._touch_y = value;
					this.SendPropertyChanged("touch_y");
					this.Ontouch_yChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(MAX)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interaction_Type_Interaction_Log", Storage="_Interaction_Type", ThisKey="type", OtherKey="id", IsForeignKey=true)]
		public Interaction_Type Interaction_Type
		{
			get
			{
				return this._Interaction_Type.Entity;
			}
			set
			{
				Interaction_Type previousValue = this._Interaction_Type.Entity;
				if (((previousValue != value) 
							|| (this._Interaction_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Interaction_Type.Entity = null;
						previousValue.Interaction_Logs.Remove(this);
					}
					this._Interaction_Type.Entity = value;
					if ((value != null))
					{
						value.Interaction_Logs.Add(this);
						this._type = value.id;
					}
					else
					{
						this._type = default(int);
					}
					this.SendPropertyChanged("Interaction_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interaction_Type")]
	public partial class Interaction_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private EntitySet<Interaction_Log> _Interaction_Logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public Interaction_Type()
		{
			this._Interaction_Logs = new EntitySet<Interaction_Log>(new Action<Interaction_Log>(this.attach_Interaction_Logs), new Action<Interaction_Log>(this.detach_Interaction_Logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interaction_Type_Interaction_Log", Storage="_Interaction_Logs", ThisKey="id", OtherKey="type")]
		public EntitySet<Interaction_Log> Interaction_Logs
		{
			get
			{
				return this._Interaction_Logs;
			}
			set
			{
				this._Interaction_Logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interaction_Logs(Interaction_Log entity)
		{
			this.SendPropertyChanging();
			entity.Interaction_Type = this;
		}
		
		private void detach_Interaction_Logs(Interaction_Log entity)
		{
			this.SendPropertyChanging();
			entity.Interaction_Type = null;
		}
	}
}
#pragma warning restore 1591
